--- node_modules/babel-plugin-remove-graphql-queries/index.js
+++ node_modules/babel-plugin-remove-graphql-queries/index.js
@@ -55,7 +55,7 @@
             })) {
               const identifier = t.identifier(`staticQueryData`);
               const filename = state.file.opts.filename;
-              const shortResultPath = `public/static/d/${this.queryHash}.json`;
+              const shortResultPath = `public/js/p/${this.queryHash}.json`;
               const resultPath = nodePath.join(process.cwd(), shortResultPath); // Add query
 
               path2.parent.attributes.push(t.jSXAttribute(t.jSXIdentifier(`data`), t.jSXExpressionContainer(identifier))); // Add import
--- node_modules/gatsby/cache-dir/loader.js
+++ node_modules/gatsby/cache-dir/loader.js
@@ -28,7 +28,7 @@
         if (resourceName in jsonStore) {
           resolve(jsonStore[resourceName])
         } else {
-          const url = `${pathPrefix ? pathPrefix : `/`}static/d/${
+          const url = `${pathPrefix ? pathPrefix : `/`}js/p/${
             asyncRequires.json[resourceName]
           }.json`
           var req = new XMLHttpRequest()
--- node_modules/gatsby/cache-dir/static-entry.js
+++ node_modules/gatsby/cache-dir/static-entry.js
@@ -117,7 +117,7 @@
           page.jsonName in staticDataPaths
             ? JSON.parse(
                 fs.readFileSync(
-                  `${process.cwd()}/public/static/d/${
+                  `${process.cwd()}/public/js/p/${
                     staticDataPaths[page.jsonName]
                   }.json`
                 )
@@ -223,7 +223,7 @@
     })
 
   if (page.jsonName in staticDataPaths) {
-    const dataPath = `${pathPrefix}static/d/${
+    const dataPath = `${pathPrefix}js/p/${
       staticDataPaths[page.jsonName]
     }.json`
     // Insert json data path after app
--- node_modules/gatsby/dist/bootstrap/index.js
+++ node_modules/gatsby/dist/bootstrap/index.js
@@ -75,7 +75,7 @@
 
     let activity = report.activityTimer(`delete html files from previous builds`);
     activity.start();
-    yield del([`public/*.htm}`, `public/**/*.html`, `!public/static`, `!public/static/**/*.html`]);
+    yield del([`public/*.htm}`, `public/**/*.html`, `!public/js`, `!public/js/**/*.html`]);
     activity.end(); // Try opening the site's gatsby-config.js file.
 
     activity = report.activityTimer(`open and validate gatsby-config.js`);
@@ -143,7 +143,7 @@
 
     initCache(); // Ensure the public/static directory is created.
 
-    yield fs.ensureDirSync(`${program.directory}/public/static/d`); // Copy our site files to the root of the site.
+    yield fs.ensureDirSync(`${program.directory}/public/js/p`); // Copy our site files to the root of the site.
 
     activity = report.activityTimer(`copy gatsby files`);
     activity.start();
--- node_modules/gatsby/dist/internal-plugins/query-runner/query-runner.js
+++ node_modules/gatsby/dist/internal-plugins/query-runner/query-runner.js
@@ -100,9 +100,9 @@
     }
 
     if (resultHashes[queryJob.id] !== resultHash) {
-      resultHashes[queryJob.id] = resultHash; // Always write file to public/static/d/ folder.
+      resultHashes[queryJob.id] = resultHash; // Always write file to public/js/p/ folder.
 
-      const resultPath = path.join(program.directory, `public`, `static`, `d`, `${dataPath}.json`);
+      const resultPath = path.join(program.directory, `public`, `js`, `p`, `${dataPath}.json`);
       yield fs.writeFile(resultPath, resultJSON);
       store.dispatch({
         type: `SET_JSON_DATA_PATH`,
--- node_modules/gatsby/dist/utils/copy-static-directory.js
+++ node_modules/gatsby/dist/utils/copy-static-directory.js
@@ -7,11 +7,11 @@
 const nodePath = require(`path`);
 
 module.exports = () => {
-  chokidar.watch(`${process.cwd()}/static`).on(`add`, path => {
-    const relativePath = nodePath.relative(`${process.cwd()}/static`, path);
+  chokidar.watch(`${process.cwd()}/js`).on(`add`, path => {
+    const relativePath = nodePath.relative(`${process.cwd()}/js`, path);
     fs.copy(path, `${process.cwd()}/public/${relativePath}`);
   }).on(`change`, path => {
-    const relativePath = nodePath.relative(`${process.cwd()}/static`, path);
+    const relativePath = nodePath.relative(`${process.cwd()}/js`, path);
     fs.copy(path, `${process.cwd()}/public/${relativePath}`);
   });
 };
--- node_modules/gatsby/dist/utils/websocket-manager.js
+++ node_modules/gatsby/dist/utils/websocket-manager.js
@@ -15,7 +15,7 @@
   const page = pages.find(p => p.path === pagePath);
   const dataPath = jsonDataPaths[page.jsonName];
   if (typeof dataPath === `undefined`) return undefined;
-  const filePath = path.join(directory, `public`, `static`, `d`, `${dataPath}.json`);
+  const filePath = path.join(directory, `public`, `js`, `p`, `${dataPath}.json`);
   const result = JSON.parse(fs.readFileSync(filePath, `utf-8`));
   return {
     result,
